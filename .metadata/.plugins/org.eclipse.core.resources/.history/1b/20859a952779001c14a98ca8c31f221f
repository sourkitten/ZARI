package myy803.springboot.sb_tutorial_0_jpa;

import static org.junit.jupiter.api.Assertions.*;

import javax.persistence.EntityManager;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.TestPropertySource;

import myy803.springboot.sb_tutorial_0_jpa.dao.StopDAO;
import myy803.springboot.sb_tutorial_0_jpa.dao.StopDAOImpl;
import myy803.springboot.sb_tutorial_0_jpa.entity.Stop;

@SpringBootTest
@TestPropertySource(
  locations = "classpath:application.properties")
class TestStopJPAMapping {

	@Autowired
	private StopDAOImpl stopDAO;
	
	@Test
	void testNotNullStopDAO(){
		Assertions.assertNotNull(stopDAO);
	}
	
	
	@Test 
	void testPersistAndStop() { 
		// create session factory
		SessionFactory factory = new Configuration()
									.configure("hibernate.cfg.xml")
									.addAnnotatedClass(Stop.class)
									.buildSessionFactory();
				
		// create session
		Session session = factory.getCurrentSession();
				
		try {			
			Stop stop = new Stop(1, "StopA", 1000.0, 200.0); 
			// start a transaction
			session.beginTransaction();
			
			// save the Stop object
			System.out.println("Saving the Stops...");
			session.save(stop);
		
			// commit transaction
			session.getTransaction().commit();
		
			session = factory.getCurrentSession();
			session.beginTransaction();
			
			// retrieve student based on the id: primary key
			System.out.println("\nGetting student with id: " + stopA.getId());
			
			Stop retrievedStop = session.get(Stop.class, 1);
			
			Assertions.assertNotNull(retrievedStop); 

			System.out.println("Done!");
		}
		finally {
			factory.close();
		}
	}
	 
	
	

}
