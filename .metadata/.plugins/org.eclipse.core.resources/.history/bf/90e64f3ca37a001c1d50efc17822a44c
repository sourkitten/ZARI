package myyy803.springboot.sb_tutorial_1_jpa;


import java.util.ArrayList;

import javax.persistence.EntityManager;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

import myyy803.springboot.sb_tutorial_1_jpa.entity.Route;
import myyy803.springboot.sb_tutorial_1_jpa.entity.Service;
import myyy803.springboot.sb_tutorial_1_jpa.entity.Stop;


/*
 * Make these simple JPA Hibernate tests 
 */
class TestRouteJPAMapping2 {

	@Test 
	void testShouldSaveAndLoadRoute() { 
		SessionFactory factory = new Configuration().configure("hibernate.cfg.xml")
				.addAnnotatedClass(Route.class)
				.addAnnotatedClass(Service.class)
				.addAnnotatedClass(Stop.class)
				.buildSessionFactory();
				
		// create session
				
		try {			
			// Clean up first
			Session session = factory.getCurrentSession();
			
			session.beginTransaction();
			EntityManager em = session.getEntityManagerFactory().createEntityManager();

			Service retrievedService = em.find(Service.class, 1);
			if(retrievedService != null)
				em.remove(retrievedService);
			
			session.getTransaction().commit();
			
			// Now test the scenario
			
			Service service = new Service(1, "ServiceA");
			
			Route routeA = new Route(1, "RouteA", service, new ArrayList<Stop>());
			routeA.addStop(new Stop(1, "StopA", 0, 0));
			routeA.addStop(new Stop(2, "StopB", 100, 50));
			routeA.addStop(new Stop(3, "StopC", 78, 500));
			
			em.persist(routeA);

			
			Route routeB = new Route(2, "RouteA", service, null);
			routeA.addStop(new Stop(4, "StopA", 0, 0));
			routeA.addStop(new Stop(5, "StopB", 100, 50));
			routeA.addStop(new Stop(6, "StopC", 78, 500));

			em.persist(routeB);
						
			Route retrievedRouteA = em.find(Route.class, 1);
			
			Route retrievedRouteB = em.find(Route.class, 2);
			
			Assertions.assertNotNull(retrievedRouteA);
			Assertions.assertNotNull(retrievedRouteB);
		} finally {
			factory.close();
		}
	}
	 
	
	

}
