package myy803.springboot.sb_tutorial_3_thymeleaf;

import static org.junit.jupiter.api.Assertions.*;

import javax.persistence.EntityManager;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.runner.RunWith;
import org.mockito.Mockito;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest;
import org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManager;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.context.TestConfiguration;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.context.annotation.Bean;
import org.springframework.test.context.TestPropertySource;
import org.springframework.test.context.junit4.SpringRunner;

import myy803.springboot.sb_tutorial_3_thymeleaf.dao.EmployeeDAO;
import myy803.springboot.sb_tutorial_3_thymeleaf.dao.EmployeeDAOJpaImpl;
import myy803.springboot.sb_tutorial_3_thymeleaf.entity.Employee;

@RunWith(SpringRunner.class)
@DataJpaTest
class UnitTestEmployeeDAOJpa {
	@Autowired 
	@Qualifier("employeeDAOJpaImpl")
	EmployeeDAO employeeDAO;
		
	@MockBean 
	private EntityManager entityManager;

	@TestConfiguration
    static class EmployeeServiceImplTestContextConfiguration {
 
        @Bean
        public EmployeeDAO employeeDAO() {
            return new EmployeeDAOJpaImpl();
        }
    }
	
	@Test
	void testEmployeeDAOJpaImplIsNotNull() {
		Assertions.assertNotNull(employeeDAO);
	}

	@Test
	void testFindByIdReturnsEmployee() {
		
		Employee employee = new Employee(1, "a", "b", "c");
		
		Mockito.when(entityManager.find(Employee.class, 1))
	      .thenReturn(employee);
		
		employeeDAO.save(employee);
		
		Employee storedEmployee = employeeDAO.findById(1);
		Assertions.assertNotNull(storedEmployee);
		Assertions.assertEquals("b", storedEmployee.getLastName());
	}
}
